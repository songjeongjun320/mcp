# Prometheus configuration for MCP Server monitoring
global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'mcp-dev'
    environment: 'development'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Load rules once and periodically evaluate them
rule_files:
  - "rules/*.yml"

# Scrape configurations
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # MCP Server instances
  - job_name: 'mcp-server'
    static_configs:
      - targets: ['mcp-server:10000']
    metrics_path: '/metrics'
    scrape_interval: 30s
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']

  # MCP Server health checks
  - job_name: 'mcp-server-health'
    static_configs:
      - targets: ['mcp-server:10000']
    metrics_path: '/health'
    scrape_interval: 15s
    scrape_timeout: 5s

  # Redis monitoring
  - job_name: 'redis'
    static_configs:
      - targets: ['redis:6379']

  # Node exporter for system metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']

  # Container metrics (cAdvisor)
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']

  # Application-specific metrics
  - job_name: 'mcp-server-custom'
    static_configs:
      - targets: ['mcp-server:10000']
    metrics_path: '/custom-metrics'
    scrape_interval: 30s
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'mcp_.*'
        action: keep

# Remote write configuration (for production)
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint"
#     basic_auth:
#       username: "user"
#       password: "password"